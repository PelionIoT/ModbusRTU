{
    "name": "Registertofacades", //Make sure to change this for each resource so that their is no ambiguity. ResourceID is generated using this, if not specified.
    "resourceID": "", //Filename, Specify a unique ID used to register this resource with deviceJS, usage- dev$.selectByID(resourceID);
                        // If not specified, will be generated by controller using name, slave address, interfaces, genre
    "deviceGenre": "registers", //thermometer, switch, lightDetector, register, coil
    "resourceType": "Core/Devices/ModbusRTU", //+ resourceID, Note- a resource type should have same interfaces 
    "version": "0.0.1",
    "slaveAddress": 2, //Modbus slave address
    "enable": true, //If false will not be started
    "overwrite": true, //If true, it will overwrite the changes made to this device controller during runtime
    "generateControllerFiles": true, //If true will generate files on disk otherwise not
    "registers": {//Define range of registers to read and then define interfaces to parse the register data
        "dataAddress": 200,
        "range": 4, //Make sure index defined in interfaces add up to number of registers to be read
        "pollingInterval": 1000,
        "readFunctionCode": 3,//Refer file lib/defs to know more about the available options
        "interfaces": {
            "Facades/HasTemperature" : {//200
                "index": 0,//Index of register data
                "outgoingOperation": "{{value}}",
                "unit": "Fahrenheit"
            },
            "Facades/HasLuminance" : {//201
                "index": 1,//Index of register data
                "outgoingOperation": "{{value}}", //If you want perform operation on output
                "unit": "Lux" //Default unitless
            },
            "Facades/Switchable": { //203
                "index": 3,//Index of register data
                "outgoingOperation": "{{value}} > 100 ? 'off' : 'on'", //If you want perform operation on output
                "eventThreshold": 10, //incase of an array, it will compare each element if any element is greater than this then an event is emitted
                "unit": "" //Default unitless
            }
        }
    }
}